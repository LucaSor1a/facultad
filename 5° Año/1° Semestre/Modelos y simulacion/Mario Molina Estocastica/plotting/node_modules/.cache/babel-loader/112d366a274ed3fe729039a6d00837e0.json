{"ast":null,"code":"import { Interval } from './interval';\nvar piLow = (3373259426.0 + 273688.0 / (1 << 21)) / (1 << 30);\nvar piHigh = (3373259426.0 + 273689.0 / (1 << 21)) / (1 << 30);\n/**\n * @mixin constants\n */\n\nvar constants = {\n  /**\n   * Previous IEEE floating point value of PI (equal to Math.PI)\n   * 3.141592653589793\n   * @memberof constants\n   * @type {number}\n   */\n  PI_LOW: piLow,\n\n  /**\n   * Next IEEE floating point value of PI, 3.1415926535897936\n   * @memberof constants\n   * @type {number}\n   */\n  PI_HIGH: piHigh,\n  PI_HALF_LOW: piLow / 2,\n  PI_HALF_HIGH: piHigh / 2,\n  PI_TWICE_LOW: piLow * 2,\n  PI_TWICE_HIGH: piHigh * 2,\n\n  /**\n   * An interval that represents PI, NOTE: calls to Interval.PI always return\n   * a new interval representing PI\n   * @memberof constants\n   * @static\n   * @example\n   * ```typescript\n   * Interval(Interval.PI_LOW, Interval.PI_HIGH)\n   * ```\n   * @name PI\n   * @type {Interval}\n   */\n  get PI() {\n    return new Interval(piLow, piHigh);\n  },\n\n  /**\n   * An interval that represents `PI / 2`, NOTE: calls to `Interval.PI_HALF` always\n   * return a new interval representing `PI / 2`\n   * @memberof constants\n   * @static\n   * @example\n   * ```typescript\n   * Interval(Interval.PI_LOW / 2, Interval.PI_HIGH / 2)\n   * ```\n   * @name PI_HALF\n   * @type {Interval}\n   */\n  get PI_HALF() {\n    return new Interval(constants.PI_HALF_LOW, constants.PI_HALF_HIGH);\n  },\n\n  /**\n   * An interval that represents `PI * 2` NOTE: calls to `Interval.PI_TWICE` always\n   * return a new interval representing `PI * 2`\n   * @memberof constants\n   * @static\n   * @example\n   * ```typescript\n   * Interval(Interval.PI_LOW * 2, Interval.PI_HIGH * 2)\n   * ```\n   * @name PI_TWICE\n   * @type {Interval}\n   */\n  get PI_TWICE() {\n    return new Interval(constants.PI_TWICE_LOW, constants.PI_TWICE_HIGH);\n  },\n\n  /**\n   * An interval that represents 0, NOTE: calls to `Interval.ZERO` always return a new interval representing 0\n   * @memberof constants\n   * @static\n   * @example\n   * ```typescript\n   * // Interval.ZERO is equivalent to\n   * Interval(0)\n   * ```\n   * @name ZERO\n   * @type {Interval}\n   */\n  get ZERO() {\n    return new Interval(0);\n  },\n\n  /**\n   * An interval that represents 1, NOTE: calls to Interval.ONE always\n   * return a new interval representing 1\n   * @memberof constants\n   * @static\n   * @example\n   * // Interval.ONE is equivalent to\n   * Interval(1)\n   * @name ONE\n   * @type {Interval}\n   */\n  get ONE() {\n    return new Interval(1);\n  },\n\n  /**\n   * An interval that represents all the real values\n   * NOTE: calls to Interval.WHOLE always return a new interval representing all the real values\n   * @memberof constants\n   * @static\n   * @example\n   * ```typescript\n   * // Interval.WHOLE is equivalent to\n   * Interval().setWhole()\n   * ```\n   * @name WHOLE\n   * @type {Interval}\n   */\n  get WHOLE() {\n    return new Interval().setWhole();\n  },\n\n  /**\n   * An interval that represents no values\n   * NOTE: calls to Interval.EMPTY always return a new interval representing no values\n   * @memberof constants\n   * @static\n   * @example\n   * ```typescript\n   * // Interval.EMPTY is equivalent to\n   * Interval().setEmpty()\n   * ```\n   * @name EMPTY\n   * @type {Interval}\n   */\n  get EMPTY() {\n    return new Interval().setEmpty();\n  }\n\n};\nexport default constants;","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,IAAMC,KAAK,GAAG,CAAC,eAAe,YAAY,KAAK,EAAjB,CAAhB,KAAyC,KAAK,EAA9C,CAAd;AACA,IAAMC,MAAM,GAAG,CAAC,eAAe,YAAY,KAAK,EAAjB,CAAhB,KAAyC,KAAK,EAA9C,CAAf;AAEA;;;;AAGA,IAAMC,SAAS,GAAG;AAChB;;;;;;AAMAC,QAAM,EAAEH,KAPQ;;AAQhB;;;;;AAKAI,SAAO,EAAEH,MAbO;AAchBI,aAAW,EAAEL,KAAK,GAAG,CAdL;AAehBM,cAAY,EAAEL,MAAM,GAAG,CAfP;AAgBhBM,cAAY,EAAEP,KAAK,GAAG,CAhBN;AAiBhBQ,eAAa,EAAEP,MAAM,GAAG,CAjBR;;AAmBhB;;;;;;;;;;;;AAYA,MAAIQ,EAAJ,GAAM;AACJ,WAAO,IAAIV,QAAJ,CAAaC,KAAb,EAAoBC,MAApB,CAAP;AACD,GAjCe;;AAmChB;;;;;;;;;;;;AAYA,MAAIS,OAAJ,GAAW;AACT,WAAO,IAAIX,QAAJ,CAAaG,SAAS,CAACG,WAAvB,EAAoCH,SAAS,CAACI,YAA9C,CAAP;AACD,GAjDe;;AAmDhB;;;;;;;;;;;;AAYA,MAAIK,QAAJ,GAAY;AACV,WAAO,IAAIZ,QAAJ,CAAaG,SAAS,CAACK,YAAvB,EAAqCL,SAAS,CAACM,aAA/C,CAAP;AACD,GAjEe;;AAmEhB;;;;;;;;;;;;AAYA,MAAII,IAAJ,GAAQ;AACN,WAAO,IAAIb,QAAJ,CAAa,CAAb,CAAP;AACD,GAjFe;;AAmFhB;;;;;;;;;;;AAWA,MAAIc,GAAJ,GAAO;AACL,WAAO,IAAId,QAAJ,CAAa,CAAb,CAAP;AACD,GAhGe;;AAkGhB;;;;;;;;;;;;;AAaA,MAAIe,KAAJ,GAAS;AACP,WAAO,IAAIf,QAAJ,GAAegB,QAAf,EAAP;AACD,GAjHe;;AAmHhB;;;;;;;;;;;;;AAaA,MAAIC,KAAJ,GAAS;AACP,WAAO,IAAIjB,QAAJ,GAAekB,QAAf,EAAP;AACD;;AAlIe,CAAlB;AAqIA,eAAef,SAAf","names":["Interval","piLow","piHigh","constants","PI_LOW","PI_HIGH","PI_HALF_LOW","PI_HALF_HIGH","PI_TWICE_LOW","PI_TWICE_HIGH","PI","PI_HALF","PI_TWICE","ZERO","ONE","WHOLE","setWhole","EMPTY","setEmpty"],"sourceRoot":"","sources":["../src/constants.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}