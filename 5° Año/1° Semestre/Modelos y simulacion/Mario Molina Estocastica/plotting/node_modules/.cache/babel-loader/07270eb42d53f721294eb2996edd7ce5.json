{"ast":null,"code":"import nextafter from 'nextafter';\n/**\n * @module interval-arithmetic/round-math\n */\n\nfunction identity(v) {\n  return v;\n}\n\nfunction prev(v) {\n  if (v === Infinity) {\n    return v;\n  }\n\n  return nextafter(v, -Infinity);\n}\n\nfunction next(v) {\n  if (v === -Infinity) {\n    return v;\n  }\n\n  return nextafter(v, Infinity);\n}\n\nfunction toInteger(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n\nvar cache = {\n  prev: prev,\n  next: next\n};\n/**\n * @alias module:interval-arithmetic/round-math\n */\n\nvar round = {\n  /**\n   * Computes the previous IEEE floating point representation of `v`\n   * @example\n   * Interval.round.safePrev(1)          // 0.9999999999999999\n   * Interval.round.safePrev(3)          // 2.9999999999999996\n   * Interval.round.safePrev(Infinity)   // Infinity\n   * @param {number} v\n   * @return {number}\n   * @function\n   */\n  safePrev: prev,\n\n  /**\n   * Computes the next IEEE floating point representation of `v`\n   * @example\n   * Interval.round.safeNext(1)          // 1.0000000000000002\n   * Interval.round.safeNext(3)          // 3.0000000000000004\n   * Interval.round.safeNext(-Infinity)  // -Infinity\n   * @param {number} v\n   * @return {number}\n   * @function\n   */\n  safeNext: next,\n  prev: function prev(x) {\n    return cache.prev(x);\n  },\n  next: function next(x) {\n    return cache.next(x);\n  },\n  // prettier-ignore\n  addLo: function addLo(x, y) {\n    return round.prev(x + y);\n  },\n  // prettier-ignore\n  addHi: function addHi(x, y) {\n    return round.next(x + y);\n  },\n  // prettier-ignore\n  subLo: function subLo(x, y) {\n    return round.prev(x - y);\n  },\n  // prettier-ignore\n  subHi: function subHi(x, y) {\n    return round.next(x - y);\n  },\n  // prettier-ignore\n  mulLo: function mulLo(x, y) {\n    return round.prev(x * y);\n  },\n  // prettier-ignore\n  mulHi: function mulHi(x, y) {\n    return round.next(x * y);\n  },\n  // prettier-ignore\n  divLo: function divLo(x, y) {\n    return round.prev(x / y);\n  },\n  // prettier-ignore\n  divHi: function divHi(x, y) {\n    return round.next(x / y);\n  },\n  // prettier-ignore\n  intLo: function intLo(x) {\n    return toInteger(round.prev(x));\n  },\n  // prettier-ignore\n  intHi: function intHi(x) {\n    return toInteger(round.next(x));\n  },\n  // prettier-ignore\n  logLo: function logLo(x) {\n    return round.prev(Math.log(x));\n  },\n  // prettier-ignore\n  logHi: function logHi(x) {\n    return round.next(Math.log(x));\n  },\n  // prettier-ignore\n  expLo: function expLo(x) {\n    return round.prev(Math.exp(x));\n  },\n  // prettier-ignore\n  expHi: function expHi(x) {\n    return round.next(Math.exp(x));\n  },\n  // prettier-ignore\n  sinLo: function sinLo(x) {\n    return round.prev(Math.sin(x));\n  },\n  // prettier-ignore\n  sinHi: function sinHi(x) {\n    return round.next(Math.sin(x));\n  },\n  // prettier-ignore\n  cosLo: function cosLo(x) {\n    return round.prev(Math.cos(x));\n  },\n  // prettier-ignore\n  cosHi: function cosHi(x) {\n    return round.next(Math.cos(x));\n  },\n  // prettier-ignore\n  tanLo: function tanLo(x) {\n    return round.prev(Math.tan(x));\n  },\n  // prettier-ignore\n  tanHi: function tanHi(x) {\n    return round.next(Math.tan(x));\n  },\n  // prettier-ignore\n  asinLo: function asinLo(x) {\n    return round.prev(Math.asin(x));\n  },\n  // prettier-ignore\n  asinHi: function asinHi(x) {\n    return round.next(Math.asin(x));\n  },\n  // prettier-ignore\n  acosLo: function acosLo(x) {\n    return round.prev(Math.acos(x));\n  },\n  // prettier-ignore\n  acosHi: function acosHi(x) {\n    return round.next(Math.acos(x));\n  },\n  // prettier-ignore\n  atanLo: function atanLo(x) {\n    return round.prev(Math.atan(x));\n  },\n  // prettier-ignore\n  atanHi: function atanHi(x) {\n    return round.next(Math.atan(x));\n  },\n  // polyfill required for hyperbolic functions\n  // prettier-ignore\n  sinhLo: function sinhLo(x) {\n    return round.prev(Math.sinh(x));\n  },\n  // prettier-ignore\n  sinhHi: function sinhHi(x) {\n    return round.next(Math.sinh(x));\n  },\n  // prettier-ignore\n  coshLo: function coshLo(x) {\n    return round.prev(Math.cosh(x));\n  },\n  // prettier-ignore\n  coshHi: function coshHi(x) {\n    return round.next(Math.cosh(x));\n  },\n  // prettier-ignore\n  tanhLo: function tanhLo(x) {\n    return round.prev(Math.tanh(x));\n  },\n  // prettier-ignore\n  tanhHi: function tanhHi(x) {\n    return round.next(Math.tanh(x));\n  },\n\n  /**\n   * @ignore\n   * ln(power) exponentiation of x\n   * @param {number} x\n   * @param {number} power\n   * @returns {number}\n   */\n  powLo: function powLo(x, power) {\n    if (power % 1 !== 0) {\n      // power has decimals\n      return round.prev(Math.pow(x, power));\n    }\n\n    var y = (power & 1) === 1 ? x : 1;\n    power >>= 1;\n\n    while (power > 0) {\n      x = round.mulLo(x, x);\n\n      if ((power & 1) === 1) {\n        y = round.mulLo(x, y);\n      }\n\n      power >>= 1;\n    }\n\n    return y;\n  },\n\n  /**\n   * @ignore\n   * ln(power) exponentiation of x\n   * @param {number} x\n   * @param {number} power\n   * @returns {number}\n   */\n  powHi: function powHi(x, power) {\n    if (power % 1 !== 0) {\n      // power has decimals\n      return round.next(Math.pow(x, power));\n    }\n\n    var y = (power & 1) === 1 ? x : 1;\n    power >>= 1;\n\n    while (power > 0) {\n      x = round.mulHi(x, x);\n\n      if ((power & 1) === 1) {\n        y = round.mulHi(x, y);\n      }\n\n      power >>= 1;\n    }\n\n    return y;\n  },\n  // prettier-ignore\n  sqrtLo: function sqrtLo(x) {\n    return round.prev(Math.sqrt(x));\n  },\n  // prettier-ignore\n  sqrtHi: function sqrtHi(x) {\n    return round.next(Math.sqrt(x));\n  },\n\n  /**\n   * Most operations on intervals will cary the rounding error so that the\n   * resulting interval correctly represents all the possible values, this feature\n   * can be disabled by calling this method allowing a little boost in the\n   * performance while operating on intervals\n   *\n   * @see module:interval-arithmetic/round-math.enable\n   * @example\n   * var x = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * x // equal to {lo: 1.9999999999999998, hi: 2.0000000000000004}\n   *\n   * Interval.round.disable()\n   * var y = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * y // equal to {lo: 2, hi: 2}\n   * @function\n   */\n  disable: function disable() {\n    cache.next = cache.prev = identity;\n  },\n\n  /**\n   * Enables IEEE previous/next floating point wrapping of values (enabled by\n   * default)\n   * @see module:interval-arithmetic/round-math.disable\n   * @example\n   * var x = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * x // equal to {lo: 1.9999999999999998, hi: 2.0000000000000004}\n   *\n   * Interval.round.disable()\n   * var y = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * y // equal to {lo: 2, hi: 2}\n   *\n   * Interval.round.enable()\n   * var z = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * z // equal to {lo: 1.9999999999999998, hi: 2.0000000000000004}\n   * @function\n   */\n  enable: function enable() {\n    cache.next = next;\n    cache.prev = prev;\n  }\n};\nexport default round;","map":{"version":3,"mappings":"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","names":["nextafter","identity","v","prev","Infinity","next","toInteger","x","Math","ceil","floor","cache","round","safePrev","safeNext","addLo","y","addHi","subLo","subHi","mulLo","mulHi","divLo","divHi","intLo","intHi","logLo","log","logHi","expLo","exp","expHi","sinLo","sin","sinHi","cosLo","cos","cosHi","tanLo","tan","tanHi","asinLo","asin","asinHi","acosLo","acos","acosHi","atanLo","atan","atanHi","sinhLo","sinh","sinhHi","coshLo","cosh","coshHi","tanhLo","tanh","tanhHi","powLo","power","pow","powHi","sqrtLo","sqrt","sqrtHi","disable","enable"],"sourceRoot":"","sources":["../src/round.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}