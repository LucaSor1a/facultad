{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar graph_types_1 = require(\"../graph-types/\");\n\nvar eval_1 = require(\"./eval\");\n\nvar datum_defaults_1 = __importDefault(require(\"../datum-defaults\"));\n\nfunction derivative(chart) {\n  var derivativeDatum = datum_defaults_1.default({\n    isHelper: true,\n    skipTip: true,\n    skipBoundsCheck: true,\n    nSamples: 2,\n    graphType: 'polyline'\n  });\n\n  function computeLine(d) {\n    if (!d.derivative) {\n      return [];\n    }\n\n    var x0 = typeof d.derivative.x0 === 'number' ? d.derivative.x0 : Infinity;\n    derivativeDatum.index = d.index;\n    derivativeDatum.scope = {\n      m: eval_1.builtIn(d.derivative, 'fn', {\n        x: x0\n      }),\n      x0: x0,\n      y0: eval_1.builtIn(d, 'fn', {\n        x: x0\n      })\n    };\n    derivativeDatum.fn = 'm * (x - x0) + y0';\n    return [derivativeDatum];\n  }\n\n  function checkAutoUpdate(d) {\n    var self = this;\n\n    if (!d.derivative) {\n      return;\n    }\n\n    if (d.derivative.updateOnMouseMove && !d.derivative.$$mouseListener) {\n      d.derivative.$$mouseListener = function (_ref) {\n        var x = _ref.x;\n\n        // update initial value to be the position of the mouse\n        // scope's x0 will be updated on the next call to `derivative(self)`\n        if (d.derivative) {\n          d.derivative.x0 = x;\n        } // trigger update (selection = self)\n\n\n        derivative(self);\n      }; // if d.derivative is destroyed and recreated, the tip:update event\n      // will be fired on the new d.derivative :)\n\n\n      chart.on('tip:update', d.derivative.$$mouseListener);\n    }\n  }\n\n  var derivative = function derivative(selection) {\n    selection.each(function (d) {\n      var el = d3_selection_1.select(this);\n      var data = computeLine.call(selection, d);\n      checkAutoUpdate.call(selection, d);\n      var innerSelection = el.selectAll('g.derivative').data(data);\n      var innerSelectionEnter = innerSelection.enter().append('g').attr('class', 'derivative'); // enter + update\n\n      innerSelection.merge(innerSelectionEnter).call(graph_types_1.polyline(chart)); // update\n      // change the opacity of the line\n\n      innerSelection.merge(innerSelectionEnter).selectAll('path').attr('opacity', 0.5);\n      innerSelection.exit().remove();\n    });\n  };\n\n  return derivative;\n}\n\nexports.default = derivative;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAKA,SAAwBA,UAAxB,CAAmCC,KAAnC,EAA+C;AAC7C,MAAMC,eAAe,GAAGC,yBAAc;AACpCC,YAAQ,EAAE,IAD0B;AAEpCC,WAAO,EAAE,IAF2B;AAGpCC,mBAAe,EAAE,IAHmB;AAIpCC,YAAQ,EAAE,CAJ0B;AAKpCC,aAAS,EAAE;AALyB,GAAd,CAAxB;;AAQA,WAASC,WAAT,CAAsBC,CAAtB,EAA0C;AACxC,QAAI,CAACA,CAAC,CAACV,UAAP,EAAmB;AACjB,aAAO,EAAP;AACD;;AACD,QAAMW,EAAE,GAAG,OAAOD,CAAC,CAACV,UAAF,CAAaW,EAApB,KAA2B,QAA3B,GAAsCD,CAAC,CAACV,UAAF,CAAaW,EAAnD,GAAwDC,QAAnE;AACAV,mBAAe,CAACW,KAAhB,GAAwBH,CAAC,CAACG,KAA1B;AACAX,mBAAe,CAACY,KAAhB,GAAwB;AACtBC,OAAC,EAAEC,eAAiBN,CAAC,CAACV,UAAnB,EAA+B,IAA/B,EAAqC;AAAEiB,SAAC,EAAEN;AAAL,OAArC,CADmB;AAEtBA,QAAE,EAAEA,EAFkB;AAGtBO,QAAE,EAAEF,eAAiBN,CAAjB,EAAoB,IAApB,EAA0B;AAAEO,SAAC,EAAEN;AAAL,OAA1B;AAHkB,KAAxB;AAKAT,mBAAe,CAACiB,EAAhB,GAAqB,mBAArB;AACA,WAAO,CAACjB,eAAD,CAAP;AACD;;AAED,WAASkB,eAAT,CAA0BV,CAA1B,EAA8C;AAC5C,QAAMW,IAAI,GAAG,IAAb;;AACA,QAAI,CAACX,CAAC,CAACV,UAAP,EAAmB;AACjB;AACD;;AACD,QAAIU,CAAC,CAACV,UAAF,CAAasB,iBAAb,IAAkC,CAACZ,CAAC,CAACV,UAAF,CAAauB,eAApD,EAAqE;AACnEb,OAAC,CAACV,UAAF,CAAauB,eAAb,GAA+B,gBAAoB;AAAA,YAARN,CAAQ,QAARA,CAAQ;;AACjD;AACA;AACA,YAAIP,CAAC,CAACV,UAAN,EAAkB;AAChBU,WAAC,CAACV,UAAF,CAAaW,EAAb,GAAkBM,CAAlB;AACD,SALgD,CAMjD;;;AACAjB,kBAAU,CAACqB,IAAD,CAAV;AACD,OARD,CADmE,CAUnE;AACA;;;AACApB,WAAK,CAACuB,EAAN,CAAS,YAAT,EAAuBd,CAAC,CAACV,UAAF,CAAauB,eAApC;AACD;AACF;;AAED,MAAMvB,UAAU,GAAG,SAAbA,UAAa,CAAUyB,SAAV,EAAgE;AACjFA,aAAS,CAACC,IAAV,CAAe,UAAUhB,CAAV,EAAW;AACxB,UAAMiB,EAAE,GAAGC,sBAAS,IAAT,CAAX;AACA,UAAMC,IAAI,GAAGpB,WAAW,CAACqB,IAAZ,CAAiBL,SAAjB,EAA4Bf,CAA5B,CAAb;AACAU,qBAAe,CAACU,IAAhB,CAAqBL,SAArB,EAAgCf,CAAhC;AACA,UAAMqB,cAAc,GAAGJ,EAAE,CAACK,SAAH,CAAa,cAAb,EACpBH,IADoB,CACfA,IADe,CAAvB;AAGA,UAAMI,mBAAmB,GAAGF,cAAc,CAACG,KAAf,GACzBC,MADyB,CAClB,GADkB,EAEzBC,IAFyB,CAEpB,OAFoB,EAEX,YAFW,CAA5B,CAPwB,CAWxB;;AACAL,oBAAc,CAACM,KAAf,CAAqBJ,mBAArB,EACGH,IADH,CACQQ,uBAASrC,KAAT,CADR,EAZwB,CAexB;AACA;;AACA8B,oBAAc,CAACM,KAAf,CAAqBJ,mBAArB,EACGD,SADH,CACa,MADb,EAEGI,IAFH,CAEQ,SAFR,EAEmB,GAFnB;AAIAL,oBAAc,CAACQ,IAAf,GAAsBC,MAAtB;AACD,KAtBD;AAuBD,GAxBD;;AA0BA,SAAOxC,UAAP;AACD;;AAxEDyC","names":["derivative","chart","derivativeDatum","datum_defaults_1","isHelper","skipTip","skipBoundsCheck","nSamples","graphType","computeLine","d","x0","Infinity","index","scope","m","eval_1","x","y0","fn","checkAutoUpdate","self","updateOnMouseMove","$$mouseListener","on","selection","each","el","d3_selection_1","data","call","innerSelection","selectAll","innerSelectionEnter","enter","append","attr","merge","graph_types_1","exit","remove","exports"],"sourceRoot":"","sources":["../../src/helpers/derivative.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}