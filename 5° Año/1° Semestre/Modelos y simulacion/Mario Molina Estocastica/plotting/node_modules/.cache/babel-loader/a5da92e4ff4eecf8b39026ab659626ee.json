{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar d3_shape_1 = require(\"d3-shape\");\n\nvar clamp_1 = __importDefault(require(\"clamp\"));\n\nvar utils_1 = __importDefault(require(\"../utils\"));\n\nvar evaluate_1 = __importDefault(require(\"../evaluate\"));\n\nfunction polyline(chart) {\n  function plotLine(selection) {\n    selection.each(function (d) {\n      var el = plotLine.el = d3_selection_1.select(this);\n      var index = d.index;\n      var evaluatedData = evaluate_1.default(chart, d);\n      var color = utils_1.default.color(d, index); // join\n\n      var innerSelection = el.selectAll(':scope > path.line').data(evaluatedData);\n      var yRange = chart.meta.yScale.range();\n      var yMax = yRange[0];\n      var yMin = yRange[1]; // workaround, clamp assuming that the bounds are finite but huge\n\n      var diff = yMax - yMin;\n      yMax += diff * 1e6;\n      yMin -= diff * 1e6;\n\n      if (d.skipBoundsCheck) {\n        yMax = Infinity;\n        yMin = -Infinity;\n      }\n\n      function y(d) {\n        return clamp_1.default(chart.meta.yScale(d[1]), yMin, yMax);\n      }\n\n      var line = d3_shape_1.line().curve(d3_shape_1.curveLinear).x(function (d) {\n        return chart.meta.xScale(d[0]);\n      }).y(y);\n      var area = d3_shape_1.area().x(function (d) {\n        return chart.meta.yScale(d[0]);\n      }).y0(chart.meta.yScale(0)).y1(y);\n      var innerSelectionEnter = innerSelection.enter().append('path').attr('class', 'line line-' + index).attr('stroke-width', 1).attr('stroke-linecap', 'round'); // enter + update\n\n      innerSelection.merge(innerSelectionEnter).each(function () {\n        var path = d3_selection_1.select(this);\n        var pathD;\n\n        if (d.closed) {\n          path.attr('fill', color);\n          path.attr('fill-opacity', 0.3);\n          pathD = area;\n        } else {\n          path.attr('fill', 'none');\n          pathD = line;\n        }\n\n        path.attr('stroke', color).attr('marker-end', function () {\n          // special marker for vectors\n          return d.fnType === 'vector' ? 'url(#' + chart.markerId + ')' : null;\n        }).attr('d', pathD);\n\n        if (d.attr) {\n          for (var k in d.attr) {\n            if (d.attr.hasOwnProperty(k)) {\n              path.attr(k, d.attr[k]);\n            }\n          }\n        }\n      }); // exit\n\n      innerSelection.exit().remove();\n    });\n  }\n\n  return plotLine;\n}\n\nexports.default = polyline;","map":{"version":3,"mappings":"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","names":["polyline","chart","plotLine","selection","each","d","el","d3_selection_1","index","evaluatedData","evaluate_1","color","utils_1","innerSelection","selectAll","data","yRange","meta","yScale","range","yMax","yMin","diff","skipBoundsCheck","Infinity","y","clamp_1","line","d3_shape_1","curve","x","xScale","area","y0","y1","innerSelectionEnter","enter","append","attr","merge","path","pathD","closed","fnType","markerId","k","hasOwnProperty","exit","remove","exports"],"sourceRoot":"","sources":["../../src/graph-types/polyline.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}