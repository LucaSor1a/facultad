{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar interval_arithmetic_eval_1 = __importStar(require(\"interval-arithmetic-eval\"));\n\nvar eval_1 = require(\"../helpers/eval\");\n\nvar utils_1 = __importDefault(require(\"../utils\")); // const Interval = (intervalArithmeticEval as any).Interval\n// disable the use of typed arrays in interval-arithmetic to improve the performance\n\n\ninterval_arithmetic_eval_1.default.policies.disableRounding();\n\nfunction interval1d(chart, d, range, nSamples) {\n  var xCoords = utils_1.default.space(chart, range, nSamples);\n  var xScale = chart.meta.xScale;\n  var yScale = chart.meta.yScale;\n  var yMin = yScale.domain()[0];\n  var yMax = yScale.domain()[1];\n  var samples = [];\n  var i;\n\n  for (i = 0; i < xCoords.length - 1; i += 1) {\n    var x = {\n      lo: xCoords[i],\n      hi: xCoords[i + 1]\n    };\n    var y = eval_1.interval(d, 'fn', {\n      x: x\n    });\n\n    if (!interval_arithmetic_eval_1.Interval.isEmpty(y) && !interval_arithmetic_eval_1.Interval.isWhole(y)) {\n      samples.push([x, y]);\n    }\n\n    if (interval_arithmetic_eval_1.Interval.isWhole(y)) {\n      // means that the next and prev intervals need to be fixed\n      samples.push(null);\n    }\n  } // asymptote determination\n\n\n  for (i = 1; i < samples.length - 1; i += 1) {\n    if (!samples[i]) {\n      var prev = samples[i - 1];\n      var next = samples[i + 1];\n\n      if (prev && next && !interval_arithmetic_eval_1.Interval.intervalsOverlap(prev[1], next[1])) {\n        // case:\n        //\n        //   |\n        //\n        //     |\n        //\n        //   p n\n        if (prev[1].lo > next[1].hi) {\n          prev[1].hi = Math.max(yMax, prev[1].hi);\n          next[1].lo = Math.min(yMin, next[1].lo);\n        } // case:\n        //\n        //     |\n        //\n        //   |\n        //\n        //   p n\n\n\n        if (prev[1].hi < next[1].lo) {\n          prev[1].lo = Math.min(yMin, prev[1].lo);\n          next[1].hi = Math.max(yMax, next[1].hi);\n        }\n      }\n    }\n  }\n\n  samples.scaledDx = xScale(xCoords[1]) - xScale(xCoords[0]);\n  return [samples];\n}\n\nvar rectEps;\n\nfunction smallRect(x, y) {\n  return interval_arithmetic_eval_1.Interval.width(x) < rectEps;\n}\n\nfunction quadTree(x, y, meta) {\n  var sample = eval_1.interval(meta, 'fn', {\n    x: x,\n    y: y\n  });\n  var fulfills = interval_arithmetic_eval_1.Interval.zeroIn(sample);\n\n  if (!fulfills) {\n    return this;\n  }\n\n  if (smallRect(x, y)) {\n    this.push([x, y]);\n    return this;\n  }\n\n  var midX = x.lo + (x.hi - x.lo) / 2;\n  var midY = y.lo + (y.hi - y.lo) / 2;\n  var east = {\n    lo: midX,\n    hi: x.hi\n  };\n  var west = {\n    lo: x.lo,\n    hi: midX\n  };\n  var north = {\n    lo: midY,\n    hi: y.hi\n  };\n  var south = {\n    lo: y.lo,\n    hi: midY\n  };\n  quadTree.call(this, east, north, meta);\n  quadTree.call(this, east, south, meta);\n  quadTree.call(this, west, north, meta);\n  quadTree.call(this, west, south, meta);\n}\n\nfunction interval2d(chart, meta) {\n  var xScale = chart.meta.xScale;\n  var xDomain = chart.meta.xScale.domain();\n  var yDomain = chart.meta.yScale.domain();\n  var x = {\n    lo: xDomain[0],\n    hi: xDomain[1]\n  };\n  var y = {\n    lo: yDomain[0],\n    hi: yDomain[1]\n  };\n  var samples = []; // 1 px\n\n  rectEps = xScale.invert(1) - xScale.invert(0);\n  quadTree.call(samples, x, y, meta);\n  samples.scaledDx = 1;\n  return [samples];\n}\n\nvar sampler = function sampler(chart, d, range, nSamples) {\n  var fnTypes = {\n    implicit: interval2d,\n    linear: interval1d\n  };\n\n  if (!fnTypes.hasOwnProperty(d.fnType)) {\n    throw Error(d.fnType + ' is not supported in the `interval` sampler');\n  } // @ts-ignore\n\n\n  return fnTypes[d.fnType].apply(null, arguments);\n};\n\nexports.default = sampler;","map":{"version":3,"mappings":"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","names":["interval_arithmetic_eval_1","policies","disableRounding","interval1d","chart","d","range","nSamples","xCoords","utils_1","space","xScale","meta","yScale","yMin","domain","yMax","samples","i","length","x","lo","hi","y","eval_1","isEmpty","isWhole","push","prev","next","intervalsOverlap","Math","max","min","scaledDx","rectEps","smallRect","width","quadTree","sample","fulfills","zeroIn","midX","midY","east","west","north","south","call","interval2d","xDomain","yDomain","invert","sampler","fnTypes","implicit","linear","hasOwnProperty","fnType","Error","apply","arguments","exports"],"sourceRoot":"","sources":["../../src/samplers/interval.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}