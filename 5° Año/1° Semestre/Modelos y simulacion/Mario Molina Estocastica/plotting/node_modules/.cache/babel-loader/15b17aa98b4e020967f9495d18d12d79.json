{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar clamp_1 = __importDefault(require(\"clamp\"));\n\nvar utils_1 = __importDefault(require(\"../utils\"));\n\nvar eval_1 = require(\"../helpers/eval\");\n\nfunction checkAsymptote(d0, d1, d, sign, level) {\n  if (!level) {\n    return {\n      asymptote: true,\n      d0: d0,\n      d1: d1\n    };\n  }\n\n  var n = 10;\n  var x0 = d0[0];\n  var x1 = d1[0];\n  var samples = utils_1.default.linspace(x0, x1, n);\n  var oldY, oldX;\n\n  for (var i = 0; i < n; i += 1) {\n    var x = samples[i];\n    var y = eval_1.builtIn(d, 'fn', {\n      x: x\n    });\n\n    if (i && oldY) {\n      var deltaY = y - oldY;\n      var newSign = utils_1.default.sgn(deltaY);\n\n      if (newSign === sign) {\n        return checkAsymptote([oldX, oldY], [x, y], d, sign, level - 1);\n      }\n    }\n\n    oldY = y;\n    oldX = x;\n  }\n\n  return {\n    asymptote: false,\n    d0: d0,\n    d1: d1\n  };\n}\n/**\n * Splits the evaluated data into arrays, each array is separated by any asymptote found\n * through the process of detecting slope/sign brusque changes\n * @param chart\n * @param d\n * @param data\n * @returns {Array[]}\n */\n\n\nfunction split(chart, d, data) {\n  var i, oldSign;\n  var deltaX;\n  var st = [];\n  var sets = [];\n  var domain = chart.meta.yScale.domain();\n  var yMin = domain[0];\n  var yMax = domain[1];\n\n  if (data[0]) {\n    st.push(data[0]);\n    deltaX = data[1][0] - data[0][0];\n    oldSign = utils_1.default.sgn(data[1][1] - data[0][1]);\n  }\n\n  function updateY(d) {\n    d[1] = Math.min(d[1], yMax);\n    d[1] = Math.max(d[1], yMin);\n    return d;\n  }\n\n  i = 1;\n\n  while (i < data.length) {\n    var y0 = data[i - 1][1];\n    var y1 = data[i][1];\n    var deltaY = y1 - y0;\n    var newSign = utils_1.default.sgn(deltaY); // make a new set if:\n\n    if ( // utils.sgn(y1) * utils.sgn(y0) < 0 && // there's a change in the evaluated values sign\n    // there's a change in the slope sign\n    oldSign !== newSign && // the slope is bigger to some value (according to the current zoom scale)\n    Math.abs(deltaY / deltaX) > 1 / 1) {\n      // retest this section again and determine if it's an asymptote\n      var check = checkAsymptote(data[i - 1], data[i], d, newSign, 3);\n\n      if (check.asymptote) {\n        st.push(updateY(check.d0));\n        sets.push(st);\n        st = [updateY(check.d1)];\n      }\n    }\n\n    oldSign = newSign;\n    st.push(data[i]);\n    ++i;\n  }\n\n  if (st.length) {\n    sets.push(st);\n  }\n\n  return sets;\n}\n\nfunction linear(chart, d, range, n) {\n  var allX = utils_1.default.space(chart, range, n);\n  var yDomain = chart.meta.yScale.domain();\n  var yDomainMargin = yDomain[1] - yDomain[0];\n  var yMin = yDomain[0] - yDomainMargin * 1e5;\n  var yMax = yDomain[1] + yDomainMargin * 1e5;\n  var data = [];\n\n  for (var i = 0; i < allX.length; i += 1) {\n    var x = allX[i];\n    var y = eval_1.builtIn(d, 'fn', {\n      x: x\n    });\n\n    if (utils_1.default.isValidNumber(x) && utils_1.default.isValidNumber(y)) {\n      data.push([x, clamp_1.default(y, yMin, yMax)]);\n    }\n  }\n\n  data = split(chart, d, data);\n  return data;\n}\n\nfunction parametric(chart, d, range, nSamples) {\n  // range is mapped to canvas coordinates from the input\n  // for parametric plots the range will tell the start/end points of the `t` param\n  var parametricRange = d.range || [0, 2 * Math.PI];\n  var tCoords = utils_1.default.space(chart, parametricRange, nSamples);\n  var samples = [];\n\n  for (var i = 0; i < tCoords.length; i += 1) {\n    var t = tCoords[i];\n    var x = eval_1.builtIn(d, 'x', {\n      t: t\n    });\n    var y = eval_1.builtIn(d, 'y', {\n      t: t\n    });\n    samples.push([x, y]);\n  }\n\n  return [samples];\n}\n\nfunction polar(chart, d, range, nSamples) {\n  // range is mapped to canvas coordinates from the input\n  // for polar plots the range will tell the start/end points of the `theta` param\n  var polarRange = d.range || [-Math.PI, Math.PI];\n  var thetaSamples = utils_1.default.space(chart, polarRange, nSamples);\n  var samples = [];\n\n  for (var i = 0; i < thetaSamples.length; i += 1) {\n    var theta = thetaSamples[i];\n    var r = eval_1.builtIn(d, 'r', {\n      theta: theta\n    });\n    var x = r * Math.cos(theta);\n    var y = r * Math.sin(theta);\n    samples.push([x, y]);\n  }\n\n  return [samples];\n}\n\nfunction points(chart, d, range, nSamples) {\n  return [d.points];\n}\n\nfunction vector(chart, d, range, nSamples) {\n  d.offset = d.offset || [0, 0];\n  return [[d.offset, [d.vector[0] + d.offset[0], d.vector[1] + d.offset[1]]]];\n}\n\nvar sampler = function sampler(chart, d, range, nSamples) {\n  var fnTypes = {\n    parametric: parametric,\n    polar: polar,\n    points: points,\n    vector: vector,\n    linear: linear\n  };\n\n  if (!(d.fnType in fnTypes)) {\n    throw Error(d.fnType + ' is not supported in the `builtIn` sampler');\n  } // @ts-ignore\n\n\n  return fnTypes[d.fnType].apply(null, arguments);\n};\n\nexports.default = sampler;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAKA,SAASA,cAAT,CAAyBC,EAAzB,EAAuCC,EAAvC,EAAqDC,CAArD,EAA2EC,IAA3E,EAAyFC,KAAzF,EAAsG;AAKpG,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AACLC,eAAS,EAAE,IADN;AAELL,QAAE,EAAEA,EAFC;AAGLC,QAAE,EAAEA;AAHC,KAAP;AAKD;;AACD,MAAMK,CAAC,GAAG,EAAV;AACA,MAAMC,EAAE,GAAGP,EAAE,CAAC,CAAD,CAAb;AACA,MAAMQ,EAAE,GAAGP,EAAE,CAAC,CAAD,CAAb;AACA,MAAMQ,OAAO,GAAGC,gBAAMC,QAAN,CAAeJ,EAAf,EAAmBC,EAAnB,EAAuBF,CAAvB,CAAhB;AACA,MAAIM,IAAJ,EAAUC,IAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,CAApB,EAAuBQ,CAAC,IAAI,CAA5B,EAA+B;AAC7B,QAAMC,CAAC,GAAGN,OAAO,CAACK,CAAD,CAAjB;AACA,QAAME,CAAC,GAAGC,eAASf,CAAT,EAAY,IAAZ,EAAkB;AAAEa,OAAC,EAAEA;AAAL,KAAlB,CAAV;;AAEA,QAAID,CAAC,IAAIF,IAAT,EAAe;AACb,UAAMM,MAAM,GAAGF,CAAC,GAAGJ,IAAnB;AACA,UAAMO,OAAO,GAAGT,gBAAMU,GAAN,CAAUF,MAAV,CAAhB;;AACA,UAAIC,OAAO,KAAKhB,IAAhB,EAAsB;AACpB,eAAOJ,cAAc,CAAC,CAACc,IAAD,EAAOD,IAAP,CAAD,EAAe,CAACG,CAAD,EAAIC,CAAJ,CAAf,EAAuBd,CAAvB,EAA0BC,IAA1B,EAAgCC,KAAK,GAAG,CAAxC,CAArB;AACD;AACF;;AACDQ,QAAI,GAAGI,CAAP;AACAH,QAAI,GAAGE,CAAP;AACD;;AACD,SAAO;AACLV,aAAS,EAAE,KADN;AAELL,MAAE,EAAEA,EAFC;AAGLC,MAAE,EAAEA;AAHC,GAAP;AAKD;AAED;;;;;;;;;;AAQA,SAASoB,KAAT,CAAgBC,KAAhB,EAA8BpB,CAA9B,EAAoDqB,IAApD,EAAoE;AAClE,MAAIT,CAAJ,EAAOU,OAAP;AACA,MAAIC,MAAJ;AACA,MAAIC,EAAE,GAAG,EAAT;AACA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,MAAM,GAAGN,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBF,MAAlB,EAAf;AACA,MAAMG,IAAI,GAAGH,MAAM,CAAC,CAAD,CAAnB;AACA,MAAMI,IAAI,GAAGJ,MAAM,CAAC,CAAD,CAAnB;;AAEA,MAAIL,IAAI,CAAC,CAAD,CAAR,EAAa;AACXG,MAAE,CAACO,IAAH,CAAQV,IAAI,CAAC,CAAD,CAAZ;AACAE,UAAM,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAtB;AACAC,WAAO,GAAGd,gBAAMU,GAAN,CAAUG,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAvB,CAAV;AACD;;AAED,WAASW,OAAT,CAAkBhC,CAAlB,EAA6B;AAC3BA,KAAC,CAAC,CAAD,CAAD,GAAOiC,IAAI,CAACC,GAAL,CAASlC,CAAC,CAAC,CAAD,CAAV,EAAe8B,IAAf,CAAP;AACA9B,KAAC,CAAC,CAAD,CAAD,GAAOiC,IAAI,CAACE,GAAL,CAASnC,CAAC,CAAC,CAAD,CAAV,EAAe6B,IAAf,CAAP;AACA,WAAO7B,CAAP;AACD;;AAEDY,GAAC,GAAG,CAAJ;;AACA,SAAOA,CAAC,GAAGS,IAAI,CAACe,MAAhB,EAAwB;AACtB,QAAMC,EAAE,GAAGhB,IAAI,CAACT,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,CAAX;AACA,QAAM0B,EAAE,GAAGjB,IAAI,CAACT,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACA,QAAMI,MAAM,GAAGsB,EAAE,GAAGD,EAApB;AACA,QAAMpB,OAAO,GAAGT,gBAAMU,GAAN,CAAUF,MAAV,CAAhB,CAJsB,CAKtB;;AACA,SAAI;AACF;AACAM,WAAO,KAAKL,OAAZ,IACA;AACAgB,QAAI,CAACM,GAAL,CAASvB,MAAM,GAAGO,MAAlB,IAA4B,IAAI,CAJlC,EAIqC;AACnC;AACA,UAAMiB,KAAK,GAAG3C,cAAc,CAACwB,IAAI,CAACT,CAAC,GAAG,CAAL,CAAL,EAAcS,IAAI,CAACT,CAAD,CAAlB,EAAuBZ,CAAvB,EAA0BiB,OAA1B,EAAmC,CAAnC,CAA5B;;AACA,UAAIuB,KAAK,CAACrC,SAAV,EAAqB;AACnBqB,UAAE,CAACO,IAAH,CAAQC,OAAO,CAACQ,KAAK,CAAC1C,EAAP,CAAf;AACA2B,YAAI,CAACM,IAAL,CAAUP,EAAV;AACAA,UAAE,GAAG,CAACQ,OAAO,CAACQ,KAAK,CAACzC,EAAP,CAAR,CAAL;AACD;AACF;;AACDuB,WAAO,GAAGL,OAAV;AACAO,MAAE,CAACO,IAAH,CAAQV,IAAI,CAACT,CAAD,CAAZ;AACA,MAAEA,CAAF;AACD;;AAED,MAAIY,EAAE,CAACY,MAAP,EAAe;AACbX,QAAI,CAACM,IAAL,CAAUP,EAAV;AACD;;AAED,SAAOC,IAAP;AACD;;AAED,SAASgB,MAAT,CAAiBrB,KAAjB,EAA+BpB,CAA/B,EAAqD0C,KAArD,EAA8EtC,CAA9E,EAAuF;AACrF,MAAMuC,IAAI,GAAGnC,gBAAMoC,KAAN,CAAYxB,KAAZ,EAAmBsB,KAAnB,EAA0BtC,CAA1B,CAAb;AACA,MAAMyC,OAAO,GAAGzB,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBF,MAAlB,EAAhB;AACA,MAAMoB,aAAa,GAAID,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAA3C;AACA,MAAMhB,IAAI,GAAGgB,OAAO,CAAC,CAAD,CAAP,GAAaC,aAAa,GAAG,GAA1C;AACA,MAAMhB,IAAI,GAAGe,OAAO,CAAC,CAAD,CAAP,GAAaC,aAAa,GAAG,GAA1C;AACA,MAAIzB,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,IAAI,CAACP,MAAzB,EAAiCxB,CAAC,IAAI,CAAtC,EAAyC;AACvC,QAAMC,CAAC,GAAG8B,IAAI,CAAC/B,CAAD,CAAd;AACA,QAAME,CAAC,GAAGC,eAASf,CAAT,EAAY,IAAZ,EAAkB;AAAEa,OAAC,EAAEA;AAAL,KAAlB,CAAV;;AACA,QAAIL,gBAAMuC,aAAN,CAAoBlC,CAApB,KAA0BL,gBAAMuC,aAAN,CAAoBjC,CAApB,CAA9B,EAAsD;AACpDO,UAAI,CAACU,IAAL,CAAU,CAAClB,CAAD,EAAImC,gBAAMlC,CAAN,EAASe,IAAT,EAAeC,IAAf,CAAJ,CAAV;AACD;AACF;;AACDT,MAAI,GAAGF,KAAK,CAACC,KAAD,EAAQpB,CAAR,EAAWqB,IAAX,CAAZ;AACA,SAAOA,IAAP;AACD;;AAED,SAAS4B,UAAT,CAAqB7B,KAArB,EAAmCpB,CAAnC,EAAyD0C,KAAzD,EAAkFQ,QAAlF,EAAkG;AAChG;AACA;AACA,MAAMC,eAAe,GAAGnD,CAAC,CAAC0C,KAAF,IAAW,CAAC,CAAD,EAAI,IAAIT,IAAI,CAACmB,EAAb,CAAnC;AACA,MAAMC,OAAO,GAAG7C,gBAAMoC,KAAN,CAAYxB,KAAZ,EAAmB+B,eAAnB,EAAoCD,QAApC,CAAhB;AACA,MAAM3C,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,OAAO,CAACjB,MAA5B,EAAoCxB,CAAC,IAAI,CAAzC,EAA4C;AAC1C,QAAM0C,CAAC,GAAGD,OAAO,CAACzC,CAAD,CAAjB;AACA,QAAMC,CAAC,GAAGE,eAASf,CAAT,EAAY,GAAZ,EAAiB;AAAEsD,OAAC,EAAEA;AAAL,KAAjB,CAAV;AACA,QAAMxC,CAAC,GAAGC,eAASf,CAAT,EAAY,GAAZ,EAAiB;AAAEsD,OAAC,EAAEA;AAAL,KAAjB,CAAV;AACA/C,WAAO,CAACwB,IAAR,CAAa,CAAClB,CAAD,EAAIC,CAAJ,CAAb;AACD;;AACD,SAAO,CAACP,OAAD,CAAP;AACD;;AAED,SAASgD,KAAT,CAAgBnC,KAAhB,EAA8BpB,CAA9B,EAAoD0C,KAApD,EAA6EQ,QAA7E,EAA6F;AAC3F;AACA;AACA,MAAMM,UAAU,GAAGxD,CAAC,CAAC0C,KAAF,IAAW,CAAC,CAACT,IAAI,CAACmB,EAAP,EAAWnB,IAAI,CAACmB,EAAhB,CAA9B;AACA,MAAMK,YAAY,GAAGjD,gBAAMoC,KAAN,CAAYxB,KAAZ,EAAmBoC,UAAnB,EAA+BN,QAA/B,CAArB;AACA,MAAM3C,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,YAAY,CAACrB,MAAjC,EAAyCxB,CAAC,IAAI,CAA9C,EAAiD;AAC/C,QAAM8C,KAAK,GAAGD,YAAY,CAAC7C,CAAD,CAA1B;AACA,QAAM+C,CAAC,GAAG5C,eAASf,CAAT,EAAY,GAAZ,EAAiB;AAAE0D,WAAK,EAAEA;AAAT,KAAjB,CAAV;AACA,QAAM7C,CAAC,GAAG8C,CAAC,GAAG1B,IAAI,CAAC2B,GAAL,CAASF,KAAT,CAAd;AACA,QAAM5C,CAAC,GAAG6C,CAAC,GAAG1B,IAAI,CAAC4B,GAAL,CAASH,KAAT,CAAd;AACAnD,WAAO,CAACwB,IAAR,CAAa,CAAClB,CAAD,EAAIC,CAAJ,CAAb;AACD;;AACD,SAAO,CAACP,OAAD,CAAP;AACD;;AAED,SAASuD,MAAT,CAAiB1C,KAAjB,EAA+BpB,CAA/B,EAAqD0C,KAArD,EAA8EQ,QAA9E,EAA8F;AAC5F,SAAO,CAAClD,CAAC,CAAC8D,MAAH,CAAP;AACD;;AAED,SAASC,MAAT,CAAiB3C,KAAjB,EAA+BpB,CAA/B,EAAqD0C,KAArD,EAA8EQ,QAA9E,EAA8F;AAC5FlD,GAAC,CAACgE,MAAF,GAAWhE,CAAC,CAACgE,MAAF,IAAY,CAAC,CAAD,EAAI,CAAJ,CAAvB;AACA,SAAO,CAAC,CACNhE,CAAC,CAACgE,MADI,EAEN,CAAChE,CAAC,CAAC+D,MAAF,CAAS,CAAT,IAAc/D,CAAC,CAACgE,MAAF,CAAS,CAAT,CAAf,EAA4BhE,CAAC,CAAC+D,MAAF,CAAS,CAAT,IAAc/D,CAAC,CAACgE,MAAF,CAAS,CAAT,CAA1C,CAFM,CAAD,CAAP;AAID;;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAU7C,KAAV,EAAwBpB,CAAxB,EAA8C0C,KAA9C,EAAuEQ,QAAvE,EAAuF;AACrG,MAAMgB,OAAO,GAAG;AACdjB,cAAU,EAAEA,UADE;AAEdM,SAAK,EAAEA,KAFO;AAGdO,UAAM,EAAEA,MAHM;AAIdC,UAAM,EAAEA,MAJM;AAKdtB,UAAM,EAAEA;AALM,GAAhB;;AAOA,MAAI,EAAEzC,CAAC,CAACmE,MAAF,IAAYD,OAAd,CAAJ,EAA4B;AAC1B,UAAME,KAAK,CAACpE,CAAC,CAACmE,MAAF,GAAW,4CAAZ,CAAX;AACD,GAVoG,CAWrG;;;AACA,SAAOD,OAAO,CAAClE,CAAC,CAACmE,MAAH,CAAP,CAAkBE,KAAlB,CAAwB,IAAxB,EAA8BC,SAA9B,CAAP;AACD,CAbD;;AAeAC,kBAAeN,OAAf","names":["checkAsymptote","d0","d1","d","sign","level","asymptote","n","x0","x1","samples","utils_1","linspace","oldY","oldX","i","x","y","eval_1","deltaY","newSign","sgn","split","chart","data","oldSign","deltaX","st","sets","domain","meta","yScale","yMin","yMax","push","updateY","Math","min","max","length","y0","y1","abs","check","linear","range","allX","space","yDomain","yDomainMargin","isValidNumber","clamp_1","parametric","nSamples","parametricRange","PI","tCoords","t","polar","polarRange","thetaSamples","theta","r","cos","sin","points","vector","offset","sampler","fnTypes","fnType","Error","apply","arguments","exports"],"sourceRoot":"","sources":["../../src/samplers/builtIn.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}