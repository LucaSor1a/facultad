{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar eval_1 = require(\"./eval\");\n\nvar datum_defaults_1 = __importDefault(require(\"../datum-defaults\"));\n\nvar graph_types_1 = require(\"../graph-types/\");\n\nfunction secant(chart) {\n  var secantDefaults = datum_defaults_1.default({\n    isHelper: true,\n    skipTip: true,\n    skipBoundsCheck: true,\n    nSamples: 2,\n    graphType: 'polyline'\n  });\n\n  function computeSlope(scope) {\n    scope.m = (scope.y1 - scope.y0) / (scope.x1 - scope.x0);\n  }\n\n  function updateLine(d, secant) {\n    if (!('x0' in secant)) {\n      throw Error('secant must have the property `x0` defined');\n    }\n\n    secant.scope = secant.scope || {};\n    var x0 = secant.x0;\n    var x1 = typeof secant.x1 === 'number' ? secant.x1 : Infinity;\n    Object.assign(secant.scope, {\n      x0: x0,\n      x1: x1,\n      y0: eval_1.builtIn(d, 'fn', {\n        x: x0\n      }),\n      y1: eval_1.builtIn(d, 'fn', {\n        x: x1\n      })\n    });\n    computeSlope(secant.scope);\n  }\n\n  function setFn(d, secant) {\n    updateLine(d, secant);\n    secant.fn = 'm * (x - x0) + y0';\n  }\n\n  function setMouseListener(d, secantObject) {\n    var self = this;\n\n    if (secantObject.updateOnMouseMove && !secantObject.$$mouseListener) {\n      secantObject.$$mouseListener = function (_ref) {\n        var x = _ref.x;\n        secantObject.x1 = x;\n        updateLine(d, secantObject);\n        secant(self);\n      };\n\n      chart.on('tip:update', secantObject.$$mouseListener);\n    }\n  }\n\n  function computeLines(d) {\n    var self = this;\n    var data = [];\n    d.secants = d.secants || [];\n\n    for (var i = 0; i < d.secants.length; i += 1) {\n      var _secant = d.secants[i] = Object.assign({}, secantDefaults, d.secants[i]); // necessary to make the secant have the same color as d\n\n\n      _secant.index = d.index;\n\n      if (!_secant.fn) {\n        setFn.call(self, d, _secant);\n        setMouseListener.call(self, d, _secant);\n      }\n\n      data.push(_secant);\n    }\n\n    return data;\n  }\n\n  var secant = function secant(selection) {\n    selection.each(function (d) {\n      var el = d3_selection_1.select(this);\n      var data = computeLines.call(selection, d);\n      var innerSelection = el.selectAll('g.secant').data(data);\n      var innerSelectionEnter = innerSelection.enter().append('g').attr('class', 'secant'); // enter + update\n\n      innerSelection.merge(innerSelectionEnter).call(graph_types_1.polyline(chart)); // change the opacity of the secants\n\n      innerSelection.merge(innerSelectionEnter).selectAll('path').attr('opacity', 0.5); // exit\n\n      innerSelection.exit().remove();\n    });\n  };\n\n  return secant;\n}\n\nexports.default = secant;","map":{"version":3,"mappings":"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","names":["secant","chart","secantDefaults","datum_defaults_1","isHelper","skipTip","skipBoundsCheck","nSamples","graphType","computeSlope","scope","m","y1","y0","x1","x0","updateLine","d","Error","Infinity","Object","assign","eval_1","x","setFn","fn","setMouseListener","secantObject","self","updateOnMouseMove","$$mouseListener","on","computeLines","data","secants","i","length","index","call","push","selection","each","el","d3_selection_1","innerSelection","selectAll","innerSelectionEnter","enter","append","attr","merge","graph_types_1","exit","remove","exports"],"sourceRoot":"","sources":["../../src/helpers/secant.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}